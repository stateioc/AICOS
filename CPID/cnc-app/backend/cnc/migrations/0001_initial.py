# Generated by Django 3.2.4 on 2023-06-13 04:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ComputingID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('computing_id', models.CharField(db_index=True, max_length=255, verbose_name='算力标识')),
                ('city', models.CharField(max_length=255, verbose_name='用户城市')),
                ('industry', models.CharField(max_length=255, verbose_name='行业')),
                ('organization', models.IntegerField(verbose_name='企业')),
                ('resource_type', models.CharField(max_length=255, verbose_name='资源类型')),
                ('region', models.CharField(max_length=255, verbose_name='城市')),
                ('availability_zone', models.CharField(max_length=255, verbose_name='可用区')),
                ('service_type', models.CharField(max_length=255, verbose_name='服务类型')),
                ('computer_total', models.IntegerField(verbose_name='计算资源')),
                ('storage_total', models.IntegerField(verbose_name='存储资源')),
                ('network_total', models.IntegerField(verbose_name='网络资源')),
            ],
            options={
                'verbose_name': '算力标识表',
                'verbose_name_plural': '算力标识表',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ComputingResourceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=255, verbose_name='来源')),
                ('session_identifier', models.CharField(max_length=255, verbose_name='会话标识')),
                ('data', models.TextField(verbose_name='请求数据')),
            ],
            options={
                'verbose_name': '算力资源请求表',
                'verbose_name_plural': '算力资源请求表',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='TaskResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=255, verbose_name='来源')),
                ('session_identifier', models.CharField(max_length=255, verbose_name='会话标识')),
                ('data', models.TextField(verbose_name='任务结果')),
            ],
            options={
                'verbose_name': '任务结果表',
                'verbose_name_plural': '任务结果表',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='TaskTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=255, verbose_name='来源')),
                ('session_identifier', models.CharField(max_length=255, verbose_name='会话标识')),
                ('data', models.TextField(verbose_name='任务模版数据')),
            ],
            options={
                'verbose_name': '任务模版表',
                'verbose_name_plural': '任务模版表',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ComputingResourceSKU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_consumption', models.IntegerField(verbose_name='功耗')),
                ('cpu_performance', models.IntegerField(verbose_name='CPU性能')),
                ('cpu_available', models.IntegerField(verbose_name='CPU可用容量')),
                ('gpu_model', models.CharField(max_length=255, verbose_name='GPU型号')),
                ('gpu_performance', models.IntegerField(verbose_name='GPU性能')),
                ('gpu_memory', models.IntegerField(verbose_name='GPU内存')),
                ('gpu_available', models.CharField(max_length=255, verbose_name='GPU可用容量')),
                ('network_delay', models.IntegerField(verbose_name='网络延迟')),
                ('network_performance', models.IntegerField(verbose_name='网络性能')),
                ('network_isixp', models.BooleanField(verbose_name='是否为专网')),
                ('network_ips', models.CharField(max_length=255, verbose_name='IP列表')),
                ('network_available', models.CharField(max_length=255, verbose_name='网络可用容量')),
                ('network_ips_available', models.CharField(max_length=255, verbose_name='IP可用资源')),
                ('network_ports', models.CharField(max_length=255, verbose_name='端口列表')),
                ('price', models.IntegerField(verbose_name='价格')),
                ('computing_id', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='cnc.computingid')),
            ],
            options={
                'verbose_name': '算力资源表',
                'verbose_name_plural': '算力资源表',
                'ordering': ['-id'],
            },
        ),
    ]
